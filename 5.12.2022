5.12.2022

#include <iostream>
#include <vector>

using namespace std;



void wypisz(vector<int>tab) {
    for (int i = 0; i < tab.size(); i++) {
        cout << tab[i] << ", ";
    }
    cout << endl;
}

int max(vector<int>tab) {
    int wynik = tab[0];
    for (int i = 1; i < tab.size(); i++) {
        if (tab[i] > wynik) {
            wynik = tab[i];
        }
    }
    return wynik;
}

bool czyNalezy(vector<int>tab, int element) {
    for (int i = 0; i < tab.size(); i++) {
        if (tab[i] == element) {
            return true;
        }
    }
    return false;
}

bool czyZawiera(vector<int>tab1, vector<int>tab2) {
    for (int i = 0; i < tab2.size(); i++) {
        if (!czyNalezy(tab1, tab2[i])) {
            return false;
        }
    }
    return true;

}

vector<int> unikalnosc(vector<int>tab)
{
    vector<int>wynik;

    for (int i = 0; i < tab.size(); i++) {
        if (!czyNalezy(wynik, tab[i])) {
            wynik.push_back(tab[i]);
        }
    }

    return wynik;
}

int sumowanie(vector<int>tab) {
    int wynik = 0;
    for (int i = 0; i < tab.size(); i++) {
        wynik += tab[i];
    }
    return wynik;
}

float srednia(vector<int>tab) {
    float wynik = sumowanie(tab);
    return wynik/tab.size();
}

vector<int> podzielnosc(vector<int>tab, int dzielnik, int reszta=0) {
    vector<int>wynik;
    for (int i = 0; i < tab.size(); i++) {
    if (tab[i] % dzielnik == reszta) {
        wynik.push_back(tab[i]);
    }
}
    return wynik;
}


int main()
{
    vector<int>tab1 = { 7, 4, 1, 3, 8, 2 };
    vector<int>tab2 = { 2, 4, 7 };
    vector<int>tab3 = { 8, 5, 1, 5, 3 ,1, 7, 4 };
    vector<int>tab4 = {8, 16, 5, 23, 20, 43, 15, 4, 2};
    int element = 1;


    wypisz(tab1);
    wypisz(tab2);
    cout << element << endl;
    cout << max(tab1) << endl;
    cout << "czy element nalezy do wektora 1: " << czyNalezy(tab1, element) << endl;
    cout << "czy wektor 1 nalezy do wektora 2: " << czyZawiera(tab1, tab2) << endl;

  

    vector<int>tabu = unikalnosc(tab3);

    wypisz(tab3);
    wypisz(tabu);

    cout << "Suma tab1: " << sumowanie(tab1) << endl;
    cout << "Suma tab2: " << sumowanie(tab2) << endl;
    cout << "Suma tab3: " << sumowanie(tab3) << endl;

    cout << "Srednia arytmetyczna: " << srednia(tab2) << endl;

    vector<int>tab4p = podzielnosc(tab4, 4);
    wypisz(tab4);
    wypisz(tab4p);


    return 0;
}

//następna wejściówka wypisz, max, czynalezy, czyzawiera, unikalnosc, 6-punktow z 28.11.2022(jak napisac funkcje), suma, srednia, podzielnosc
